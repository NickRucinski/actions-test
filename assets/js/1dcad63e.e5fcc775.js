"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[2994],{95156:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>r,default:()=>m,frontMatter:()=>a,metadata:()=>o,toc:()=>d});var n=t(74848),i=t(28453);const a={sidebar_position:3},r="Sequence Diagrams",o={id:"system-architecture/sequence-diagrams",title:"Sequence Diagrams",description:"Use Case 1: Receiving Context-Aware Code Suggestions",source:"@site/docs/system-architecture/sequence-diagrams.md",sourceDirName:"system-architecture",slug:"/system-architecture/sequence-diagrams",permalink:"/actions-test/docs/system-architecture/sequence-diagrams",draft:!1,unlisted:!1,editUrl:"https://github.com/NickRucinski/actions-test/edit/main/documentation/docs/system-architecture/sequence-diagrams.md",tags:[],version:"current",lastUpdatedBy:"HydroLink",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"docsSidebar",previous:{title:"Class Diagram",permalink:"/actions-test/docs/system-architecture/class-diagram"},next:{title:"Entity Relation Diagram",permalink:"/actions-test/docs/system-architecture/entity-relation-diagram"}},c={},d=[{value:"Use Case 1: Receiving Context-Aware Code Suggestions",id:"use-case-1-receiving-context-aware-code-suggestions",level:3},{value:"Use Case 2: Asking Inline Questions about Code",id:"use-case-2-asking-inline-questions-about-code",level:3},{value:"Use Case 3: Asking Questions in the Copilot Chat",id:"use-case-3-asking-questions-in-the-copilot-chat",level:3},{value:"Use Case 4: Logging Decision Time for Code Suggestions",id:"use-case-4-logging-decision-time-for-code-suggestions",level:3},{value:"Use Case 5: Receiving Feedback After Selecting a Suggestion",id:"use-case-5-receiving-feedback-after-selecting-a-suggestion",level:3},{value:"Use Case 6: Tracking and Logging User Decisions",id:"use-case-6-tracking-and-logging-user-decisions",level:3},{value:"Use Case 7: Identifying Common Student Mistakes",id:"use-case-7-identifying-common-student-mistakes",level:3},{value:"Use Case 8: Generating Learning Reports for Administrators",id:"use-case-8-generating-learning-reports-for-administrators",level:3},{value:"Use Case 9: Monitoring User&#39;s Progress",id:"use-case-9-monitoring-users-progress",level:3},{value:"Use Case 10: AI Generated Quiz Based off of Previous Topics",id:"use-case-10-ai-generated-quiz-based-off-of-previous-topics",level:3}];function l(e){const s={h1:"h1",h3:"h3",mermaid:"mermaid",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h1,{id:"sequence-diagrams",children:"Sequence Diagrams"}),"\n",(0,n.jsx)(s.h3,{id:"use-case-1-receiving-context-aware-code-suggestions",children:"Use Case 1: Receiving Context-Aware Code Suggestions"}),"\n",(0,n.jsx)(s.mermaid,{value:"    sequenceDiagram\n    actor User as User\n    participant System as System\n    actor AI Model as AI Model\n    User ->> System: Begins typing code\n    System ->> AI Model: Sends code context\n    AI Model --\x3e> System: Returns code suggestion\n    System --\x3e> User: Displays AI model suggestion\n    User ->> System: Reviews and accepts/rejects suggestion\n    System ->> System: Logs user\u2019s choice, decision time, correctness\n    alt User accepts incorrect suggestion\n    System ->> AI Model: Request explanation of mistake\n    AI Model --\x3e> System: Provides explanation\n    System --\x3e> User: Displays explanation\n    end"}),"\n",(0,n.jsx)(s.h3,{id:"use-case-2-asking-inline-questions-about-code",children:"Use Case 2: Asking Inline Questions about Code"}),"\n",(0,n.jsx)(s.mermaid,{value:'sequenceDiagram\n actor User as User\n participant System as System\n actor AI Model as AI Model\n   User->>System: Highlights code and clicks "ask Copilot"\n   User->>System: Types question\n   System->>AI Model: Sends question\n   AI Model--\x3e>System: Provides explanation\n   System--\x3e>User: Displays response\n   alt User requests clarification\n       User->>System: Requests further clarification\n       System->>AI Model: Sends clarification request\n       AI Model--\x3e>System: Provides detailed clarification\n       System--\x3e>User: Displays detailed clarification\n   end\n   System->>System: Logs user\u2019s question and clarification request\n'}),"\n",(0,n.jsx)(s.h3,{id:"use-case-3-asking-questions-in-the-copilot-chat",children:"Use Case 3: Asking Questions in the Copilot Chat"}),"\n",(0,n.jsx)(s.mermaid,{value:"sequenceDiagram\n actor User as User\n participant System as System\n actor AI Model as AI Model\n   User->>System: Opens AI model chat\n   User->>System: Types question\n   System->>AI Model: Sends question\n   AI Model--\x3e>System: Returns answer\n   System--\x3e>User: Displays response\n   alt User requests clarification\n       User->>System: Requests further clarification\n       System->>AI Model: Sends clarification request\n       AI Model--\x3e>System: Provides detailed clarification\n       System--\x3e>User: Displays detailed clarification\n   end\n   System->>System: Logs question and clarification request"}),"\n",(0,n.jsx)(s.h3,{id:"use-case-4-logging-decision-time-for-code-suggestions",children:"Use Case 4: Logging Decision Time for Code Suggestions"}),"\n",(0,n.jsx)(s.mermaid,{value:"sequenceDiagram\n actor User as User\n participant System as System\n\n\n   System->>System: Starts timer with code suggestion\n   User->>System: Reviews suggestion\n   User->>System: Accepts or rejects suggestion\n   System->>System: Stops timer and logs response time\n   alt User makes quick, random wrong selections\n       System->>System: Flags user for disengagement\n   end"}),"\n",(0,n.jsx)(s.h3,{id:"use-case-5-receiving-feedback-after-selecting-a-suggestion",children:"Use Case 5: Receiving Feedback After Selecting a Suggestion"}),"\n",(0,n.jsx)(s.mermaid,{value:"sequenceDiagram\n    actor User as User\n    participant System as System\n   User->>System: Accepts/rejects suggestion\n   System->>System: Determines correctness\n   alt User chooses correctly\n       System--\x3e>User: Provides confirmation\n   else User chooses incorrectly\n       System--\x3e>User: Provides explanation of mistake\n   end\n   System->>System: Logs mistake or correctness for admin review"}),"\n",(0,n.jsx)(s.h3,{id:"use-case-6-tracking-and-logging-user-decisions",children:"Use Case 6: Tracking and Logging User Decisions"}),"\n",(0,n.jsx)(s.mermaid,{value:"sequenceDiagram\n   participant System\n   participant Database\n\n   System->>Database: Logs accepted/rejected suggestions\n   System->>Database: Tracks correctness\n   System->>Database: Records decision time\n   alt Frequent incorrect suggestions\n       System->>Database: Logs recurring mistakes for admin review\n   end\n   alt Multiple users with same mistakes\n       System->>Database: Flags concept as struggle area\n   end"}),"\n",(0,n.jsx)(s.h3,{id:"use-case-7-identifying-common-student-mistakes",children:"Use Case 7: Identifying Common Student Mistakes"}),"\n",(0,n.jsx)(s.mermaid,{value:"sequenceDiagram\n    actor AI model\n    participant Database\n    participant System\n    participant Administrator\n\n    System->>Database: Records incorrect suggestions\n    System->>AI Model: Sends data for analysis\n    AI Model--\x3e>System: Extracts concepts needing work\n    System->>Database: Stores flagged concept for the user\n    System--\x3e>Administrator: Flags concepts for review"}),"\n",(0,n.jsx)(s.h3,{id:"use-case-8-generating-learning-reports-for-administrators",children:"Use Case 8: Generating Learning Reports for Administrators"}),"\n",(0,n.jsx)(s.mermaid,{value:"sequenceDiagram\n   participant User\n   participant AI Model\n   participant Administrator\n\n\n   User->>AI Model: Makes selections from AI suggestions\n   AI Model->>AI Model: Keeps track of user selection data\n   AI Model->>AI Model: Calculates percentages of correct and incorrect responses\n   alt User makes a correct selection\n       AI Model->>AI Model: Tracks this data in a 'correct' category\n   else User makes an incorrect selection \n       AI Model->>AI Model: Tracks this data in an 'incorrect' category\n   end\n   AI Model->>AI Model: Puts user data into a formatted performance report table/page\n   Administrator->>Administrator: Review the report\n   "}),"\n",(0,n.jsx)(s.h3,{id:"use-case-9-monitoring-users-progress",children:"Use Case 9: Monitoring User's Progress"}),"\n",(0,n.jsx)(s.mermaid,{value:"sequenceDiagram\n   participant Administrator\n   participant AI Model\n\n\n   Administrator->>AI Model: Views the students weekly or monthly progress report\n   AI Model->>Administrator: Displays report of user data\n   alt User is struggling with a certain topic\n       AI Model->>Administrator: Provides a breakdown of the user's struggled topics\n   else User is progressing with new topics\n       AI Model->>Administrator: Provides a confirmation of good progress\n   end\n   alt Multiple students are making similar errors\n       AI Model->>Administrator: Generates extra review for these topics\n   else The class is grasping new concepts\n       AI Model->>Administrator: Confirms successful class progress\n   end\n"}),"\n",(0,n.jsx)(s.h3,{id:"use-case-10-ai-generated-quiz-based-off-of-previous-topics",children:"Use Case 10: AI Generated Quiz Based off of Previous Topics"}),"\n",(0,n.jsx)(s.mermaid,{value:"sequenceDiagram\n   participant User\n   participant AI Model\n   participant Administrator\n\n   AI Model->>AI Model: Logs topics that were discussed throughout the week\n   AI Model->>AI Model: Analyze the users progress reports\n   AI Model->> AI Model: Determine which areas need the most improvement\n   AI Model->>User: Generates quiz and makes it available to the user\n   User->>AI Model: Take the quiz\n   AI Model->>AI Model: Grades and logs quiz results\n\n\n   alt User answered question incorrectly\n       AI Model->>User: Provides feedback and correction for the question\n   else User answers question correctly\n       AI Model->>User: Mark question as correct\n   end\n   AI Model->>Administrator: Makes quiz results viewable\n   Administrator->>User: Distribute results\n   User->>User: Review their grades and use AI suggestions to study"})]})}function m(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>r,x:()=>o});var n=t(96540);const i={},a=n.createContext(i);function r(e){const s=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),n.createElement(a.Provider,{value:s},e.children)}}}]);