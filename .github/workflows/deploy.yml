# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions


name: Deploy Docs

on:
  workflow_run:
    workflows: ["Tests"]
    types:
      - completed
jobs:
  generate-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          cd webserver
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Generate Python documentation
        run: |
          cd webserver/docs
          python -m sphinx.cmd.build -b html source build

      - name: Upload flaskdocs
        run: |
          rm -rf documentation/static/flaskdoc
          mv webserver/docs/build documentation/static/flaskdoc

      - name: Generate OpenAPI documentation
        run: |
          curl -L -o documentation/static/apispec_1.json https://ai.nickrucinski.com/apispec_1.json

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          cd extension
          npm install

      - name: Generate extension documentation
        run: |
          cd extension
          npx typedoc src --entryPointStrategy expand --plugin typedoc-theme-hierarchy --theme hierarchy --readme none
          cd ../
          mv webserver/docs/tsdoc documentation/static/tsdoc

      - name: Debug Documentation Files
        run: ls -R documentation/static/

      - name: Upload Documentation Artifacts
        id: upload-docs
        uses: actions/upload-artifact@v4
        with:
          name: documentation
          path: documentation/static/
  deploy:
    runs-on: ubuntu-latest
    needs: generate-docs
    env:
      GIT_USER: ${{secrets.USER}}
      GIT_PASS: ${{secrets.TOKEN}}

    steps:
      - uses: actions/checkout@v3

      - name: Download Documentation Artifacts
        uses: actions/download-artifact@v4
        with:
          name: documentation
          path: documentation/static/

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          cd documentation
          yarn install

      - name: Deploy
        run: |
          export ORG_NAME=$(echo ${GITHUB_REPOSITORY%/*})
          export PROJECT_NAME=$(echo ${GITHUB_REPOSITORY#*/})
          git config --global user.name "$(git --no-pager log --format=format:'%an' -n 1)"
          git config --global user.email "$(git --no-pager log --format=format:'%ae' -n 1)"
          cd documentation && yarn deploy